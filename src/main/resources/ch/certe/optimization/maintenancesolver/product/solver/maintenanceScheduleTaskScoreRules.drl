/*
 * Copyright 2010 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package ch.certe.optimization.maintenancesolver.product.solver;
    dialect "java"

import org.optaplanner.core.api.score.buildin.hardsoft.HardSoftScoreHolder;

import ch.certe.optimization.maintenancesolver.product.domain.MaintenanceScheduleTask;
import ch.certe.optimization.maintenancesolver.product.domain.Task;
import ch.certe.optimization.maintenancesolver.product.domain.Employee;
import ch.certe.optimization.maintenancesolver.product.domain.EmployeeTaskAssignment;
import ch.certe.optimization.maintenancesolver.product.domain.pattern.ConflictPattern;

global HardSoftScoreHolder scoreHolder;

// ############################################################################
// Hard constraints
// ############################################################################


rule "TaskHasEmployee"
    when
        EmployeeTaskAssignment( employee == null )
    then
        scoreHolder.addHardConstraintMatch(kcontext, -1);
end

// ############################################################################
// Soft constraints
// ############################################################################

rule "Evenly"
    when
        $employee : Employee($max : max)
        accumulate(
            $assignment : EmployeeTaskAssignment(employee == $employee);
            $totalAssignments : count($assignment);
            $totalAssignments > $max
        )
    then
        scoreHolder.addSoftConstraintMatch(kcontext, -1);
end